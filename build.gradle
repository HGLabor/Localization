plugins {
    id 'java'
    id("maven-publish")
}

group 'de.hglabor'
version '0.0.5'
description "Localization for HGLabor Network"
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_11

allprojects {
    repositories {
        jcenter()
    }
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
    apply plugin: 'java'
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'localization'
                packaging 'jar'
                description "Localization for HGLabor Network"
                url 'https://github.com/HGLabor/Localization/tree/main'

                scm {
                    connection "scm:git:git://github.com/HGLabor/Localization.git"
                    developerConnection "scm:git:ssh://github.com:HGLabor/Localization.git"
                    url "https://github.com/HGLabor/Localization"
                }

                developers {
                    developer {
                        id 'copyandexecute'
                    }
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.apache.commons:commons-text:1.9"
    compileOnly "com.google.code.gson:gson:2.8.6"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}
